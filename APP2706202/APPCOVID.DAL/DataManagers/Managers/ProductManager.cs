using APPCOVID.DAL.DataManagers.Core;
using APPCOVID.DAL.DataManagers.Helper;
using APPCOVID.Entity.DTO;
using System.Collections.Generic;

namespace APPCOVID.DAL.DataManagers.Managers
{
    public class ProductManager : DataManager<ProductDto>
    {
        #region Db Queries 
        private readonly string createTableQuery = $@"CREATE TABLE {DalCostants.TABLE_SCHEMA}.{DalCostants.PRODUCT_TABLE}" +
           "( PRODID INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, " +
           "NAME VARCHAR(50) NOT NULL, " +
           "PRODUCTTYPE INT NOT NULL, " +
           "FORSTAGE INT NOT NULL, " +
           "SHORTDESCRIPTION VARCHAR(500) NULL, " +
           "PRODUCTURL VARCHAR(150) NULL, " +
           "USERID VARCHAR(20) NOT NULL, " +
           "MEMBERSHIPPLAN INT NOT NULL, " +
           "PRIMARY KEY (PRODID) );";

        private readonly string getAllDataQuery = $@"select * from {DalCostants.TABLE_SCHEMA}.{DalCostants.PRODUCT_TABLE}";

        #endregion

        private DataManager<ProductDto> _dataManager;

        public ProductManager()
        {
            _dataManager = new DataManager<ProductDto>();
            if (!_dataManager.IsTableExistsinDb(DalCostants.TABLE_SCHEMA, DalCostants.PRODUCT_TABLE))
            {
                _dataManager.CreateNewTable(createTableQuery, DalCostants.TABLE_SCHEMA, DalCostants.PRODUCT_TABLE);
            }
        }

        public List<ProductDto> GetProductData()
        {
            return _dataManager.GetData(getAllDataQuery);
        }

        public bool CreateInsuranceProduct(ProductDto product)
        {
            string prepareQuery = $@"insert into {DalCostants.TABLE_SCHEMA}.{DalCostants.PRODUCT_TABLE} (NAME,PRODUCTTYPE,FORSTAGE,SHORTDESCRIPTION,PRODUCTURL,USERID,MEMBERSHIPPLAN)
                            values('{product.NAME}', '{product.PRODUCTTYPE}', '{product.FORSTAGE}', '{product.SHORTDESCRIPTION}', '{product.PRODUCTURL}', '{product.USERID}', '{product.MEMBERSHIPPLAN}')";
            return _dataManager.InsertData(prepareQuery);
        }

    }
}
